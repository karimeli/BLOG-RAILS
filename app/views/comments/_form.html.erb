<div class="comment">
  <%# Se utiliza form_with, que es el estándar moderno en Rails para formularios %>
  <%= form_with(model: [@post, @post.comments.build], multipart: true) do |f| %>
    <div class="field">
      <%= f.label :commenter %><br />
      <%= f.text_field :commenter %>
    </div>

    <div class="field">
      <%= f.label :body %><br />
      <%= f.text_area :body, class: "ckeditor", rows: 5 %>
    </div>

    <div class="field">
      <%= f.label :image, "Add Image", class: "custom-file-upload" %><br />
      <%# El campo de archivo ahora funcionará correctamente con form_with %>
      <%= f.file_field :image, style: "display:none;" %>
    </div>

    <div class="actions">
      <%= f.submit "Add Comment", style: "background-color: green; color: white; padding: 5px 10px; border: none; cursor: pointer;" %>
    </div>
  <% end %>
</div>

<script src="https://cdn.ckeditor.com/ckeditor5/39.0.1/classic/ckeditor.js"></script>
<script>
  document.addEventListener("DOMContentLoaded", function() {
    const editorElements = document.querySelectorAll('.ckeditor');
    
    editorElements.forEach(element => {
      ClassicEditor.create(element, {
        toolbar: [ 'heading', '|', 'bold', 'italic', 'link', 'bulletedList', 'numberedList', 'blockQuote', '|', 'insertTable', 'mediaEmbed', 'undo', 'redo' ],
      })
      .then(editor => {
        const form = element.closest('form');
        
        form.addEventListener('submit', function() {
          element.value = editor.getData();
        });
       
        console.log('CKEditor inicializado');
      })
      .catch(error => {
        console.error('Error al inicializar CKEditor:', error);
      });
    });
  });
</script>